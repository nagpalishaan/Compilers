import java.util.*;
    
aspect Interpreter {

    public class ActivationRecord {

        private HashMap<String, Integer> vars;
    
        // TODO: put method to store variable/parameter values
        public void put(String name, int value) {
            vars.put(name, value);
        }
    
        // TODO: get method to retrieve variable/parameter values
        public void get(String name) {
            vars.get(name);
            // TODO: throw exception if variable not found
        }
    }

    public void Program.eval(){

        // Declare main IDDecl as unknown
        IdDecl main = unknownDecl();
        boolean mainFunctionFound = false;

        // Loop through all functions to find main function
		for(Function func : getFunctionList()) {
			if(func.getIdDecl().getID() == "main"){
				main = func.getIdDecl();
                mainFunctionFound = true;
			}
		}

        // Report runtime error if main function never found
        if(!mainFunctionFound) {
            throw new RuntimeException("main function is missing");
        }

        // Call eval() on main function (if it exists); function should be given a new ActivationRecord
            // See TypeAnalysis.jrag for function() method
        main.function().eval(new ActivationRecord());
    }

    public int Function.eval(ActivationRecord actrec){
        throw new RuntimeException("Function is not implemented yet");
    }

    public void StmtBlock.eval(ActivationRecord actrec){
        throw new RuntimeException("StmtBlock is not implemented yet");
    }

    // Evaluation of an expression returns an integer
        // Boolen values should be mapped to integers
    public int Expr.eval(ActivationRecord actrec){
        throw new RuntimeException("Expr is not implemented yet");
    }

}