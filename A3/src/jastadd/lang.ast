Program ::= Function*;

Function ::= IdDecl ParamList StmtBlock;

StmtBlock : Stmt ::= Stmt*;

Param ::= IdDecl;

ParamList ::= Param*;

abstract Stmt;
DeclareVar : Stmt ::= IdDecl [Expr];
AssignVar : Stmt ::= IdUse Expr;

IfElse : Stmt ::= Expr StmtBlock [ElseBlock:StmtBlock];
While : Stmt ::= Expr StmtBlock;
Return : Stmt ::= Expr;

FunctionCallStmt : Stmt ::= FunctionCall;
FunctionCall : Expr ::= IdUse Expr*;

abstract Expr;
BinExpr : Expr ::= Left:Expr Right:Expr;
Numeral : Expr ::= <NUMERAL>;
IdUse : Expr ::= <ID>;
Neg : Expr ::= Expr;
Add : Expr ::= BinExpr;
Mul : Expr ::= BinExpr;
Div : Expr ::= BinExpr;
Sub : Expr ::= BinExpr;
Mod : Expr ::= BinExpr;
Less : Expr ::= BinExpr;
LessEqual : Expr ::= BinExpr;
Greater : Expr ::= BinExpr;
GreaterEqual : Expr ::= BinExpr;
Not : Expr ::= BinExpr;
Equal : Expr ::= BinExpr;

IdDecl ::= <ID>;
