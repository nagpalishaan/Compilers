%class "LangParser";
%package "lang.ast";

%embed {:
	static public class SyntaxError extends RuntimeException { public SyntaxError(String msg) {super(msg);}}
	// Disable syntax error recovery
	protected void recoverFromError(Symbol token, TokenStream in) {
		throw new SyntaxError("Cannot recover from the syntax error");
	}
:};

%terminals ID, INT, LPARANTH, RPARANTH, LCURLY, RCURLY, NUMERAL;

%typeof program = "Program";
%typeof id_decl = "IdDecl";
%typeof function = "Function";
%typeof numeral = "Numeral";
%typeof functionDecls = "List";

%goal program;

program = functionDecls.a {: return new Program(a); :} ;
id_decl = ID.id {: return new IdDecl(id); :} ;

function = INT id_decl.a LPARANTH RPARANTH LCURLY RCURLY {: return new Function(); :} ;

numeral = NUMERAL.num {: return new Numeral(num); :} ;

functionDecls =
    function.a {: return new List().add(a); :}
    | functionDecls.a function.b {: return a.add(b); :} ;