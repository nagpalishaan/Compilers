aspect NameAnalysis {

    // IdUse
	syn IdDecl IdUse.decl() = lookup(getID());
	inh IdDecl IdUse.lookup(String name);

    // Program
    eq Program.getChild().lookup(String name) {
        // TODO: finish implementing predefinedFunctions()
        // for (Function pf : predefinedFunctions()) {
        //     if (pf.getIdDecl().getID().equals(name)) {
        //         return pf.getIdDecl();
        //     }
        // }

        // TODO: do we need to check this since order of functions doesn't matter?
        for (Function f : getFunctionList()) {
            if (f.getIdDecl().getID().equals(name)) {
                return f.getIdDecl();
            }
        }
        return unknownDecl();
    }
    
    // Function
    inh IdDecl Function.lookup(String name);

    syn IdDecl Function.localLookup(String name, int until){
        ParamList paramList = getParamList();
        for (int i = 0; i <= until; i++) {
            if (paramList.getParam(i).getIdDecl().getID().equals(name)) {
                return paramList.getParam(i).getIdDecl();
            }
        }

        // TODO: can we replace this with a call to StmtBlock.localLookup?
        // for (int i = 0; i <= until; i++) {
        //     if (getStmtBlock().getStmt(i).getIdDecl().getID().equals(name)) {
        //         return getStmtBlock().getStmt(i).getIdDecl();
        //     }
        // }
        return unknownDecl();
    }

    // Statement Block
    inh IdDecl StmtBlock.lookup(String name);

    eq StmtBlock.getStmt(int index).lookup(String name) {
        IdDecl decl = localLookup(name, index);
		return !decl.isUnknown() ? decl : lookup(name);
    }

    syn IdDecl StmtBlock.localLookup(String name, int until){
        for (int i = 0; i <= until; i++) {
            IdDecl decl = getStmt(i).localLookup(name);
            if (decl.getID().equals(name)) {
                return decl;
            }
        }
        return unknownDecl();
    }

    syn IdDecl DeclareVar.localLookup(String name) {
        if (getIdDecl().getID().equals(name)) {
            return getIdDecl();
        }
        return unknownDecl();
    }

    syn IdDecl Stmt.localLookup(String name) = unknownDecl();

    // IdDecl
    inh IdDecl IdDecl.lookup(String name);

    // IdDecl Multi Declared
	syn boolean IdDecl.isMultiDeclared() = lookup(getID()) != this;

    // TODO: check if parameters are correctly defined
    // syn nta List<Function> Program.predefinedFunctions() {
    //     List<Function> list = new List <Function>();
    //     list.add(new Function(new IdDecl("print"), new ParamList(), new StmtBlock()));
    //     list.add(new Function(new IdDecl("read"), new ParamList(), new StmtBlock()));
    //     return list;
    // }
}

aspect CircularDefinitions {
	/* Identify circular definitions in functions */
	syn boolean IdUse.isCircular() = inExprOf(decl());
	inh boolean IdUse.inExprOf(IdDecl decl);

    // TODO

    eq Program.getChild().inExprOf(IdDecl decl) = false;
}